set search_path to oe,hr;

-- Task 1
create table oe.bank(
	bank_code varchar (4) primary key,
	bank_name varchar (55)
);

create table oe.users(
	user_id int primary key,
	user_name varchar (30),
	user_email varchar (80) unique,
	user_password varchar (125),
	user_handphone varchar (24) unique,
	created_on timestamptz default current_timestamp
);

create table oe.carts(
	cart_id smallint primary key,
	created_on timestamptz default current_timestamp,
	user_id int not null unique,
	foreign key (user_id) references oe.users (user_id) on update cascade on delete cascade
);

create table oe.cart_items(
	cart_item_id smallint primary key,
	product_id int unique,
	quantity smallint,
	created_on timestamptz default current_timestamp,
	cart_id int not null,
	foreign key (cart_id) references oe.carts (cart_id) on update cascade on delete cascade
);

alter table oe.orders
add column user_id int,
add constraint user_id_fk foreign key (user_id) references oe.users(user_id),
add column bank_code varchar (4),
add constraint bank_code_fk foreign key (bank_code) references oe.bank(bank_code),
add column total_discount decimal(5,2),
add column total_amount decimal(8,2),
add column payment_type varchar(15),
add column card_no varchar(25),
add column transac_no varchar(25),
add column transac_date timestamptz,
add column ref_no varchar(25);

-- Task 2
alter table oe.cart_items
add constraint cart_product_id_fk foreign key (product_id) 
references oe.products(product_id)

alter table oe.orders
add column location_id int,
add constraint location_id_hr foreign key(location_id) 
references hr.locations(location_id)

update oe.orders as cu
set location_id = (select location_id from oe.location_x loc
where loc.street_address=cu.ship_address
	and loc.postal_code=cu.ship_postal_code
	and loc.city=cu.ship_city
	and loc.state_province=cu.ship_region
	and loc.country_name=cu.ship_country
) where cu.location_id is null

-- Task 3
insert into hr.employees (employee_id, first_name, last_name, email, hire_date, job_id, salary)
select 
	employee_id,
	first_name,
	last_name,
	lower(first_name||  '.' || last_name || '@belajarsql.go.id')
	as email, hire_date, j.job_id, 0.00
	as salary
from oe.employees
	JOIN (
    	SELECT job_id FROM hr.jobs
    ORDER BY RANDOM()
	limit 1
) j ON TRUE;
select * from hr.employees

alter table oe.orders
add constraint employee_id foreign key(employee_id) 
references hr.employees(employee_id)

-- Task 4
create extension if not exists pgcrypto;

alter table oe.users
alter column user_id add generated by default as identity

insert into oe.users (
			user_name,
			user_password,
			user_handphone)
		select contact_name as user_name, 
	crypt(lower(oc.customer_id), gen_salt('bf', 12)),
phone as user_handphone from oe.customers oc

select * from oe.users